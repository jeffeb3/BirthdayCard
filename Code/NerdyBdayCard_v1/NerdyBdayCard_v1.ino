
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////  2021 MakeItHackin Nerdy Birthday Card - DEMO CODE 
//////////////////////////////////////////////////////////////////////////////////////////////////


/* 
  IF YOU HAVE ANY QUESTIONS OR COMMENTS, FEEL FREE TO INITIATE AN ISSUE ON GITHUB.  I PLAN TO ADD ADDITIONAL COMMENTS IN THE CODE, AND MAYBE SOME MORE FEATURES!
  
  ALL LIBRARIES FOR COMPONENTS WILL BE INCLUDED IN GITHUB LINK, SO FEEL FREE TO TINKER AROUND!
  https://github.com/MakeItHackin/BirthdayCard

  Code was compiled with the SpenceKonde ATTinyCore
  https://github.com/SpenceKonde/ATTinyCore

  Code was uploaded using the following settings
  Add this site to the Additional Board Manager URLs in PREFERENCES
  http://drazzy.com/package_drazzy.com_index.json
  Board: ATtiny25/45/85 (No bootloader)
  Chip: ATtiny85
  Clock: 8 MHz (internal)
  B.O.D. Level (Only set on ISP bootload): B.O.D. Disabled (saves power)
  Save EEPROM: EEPROM retained
  Timer 1 Clock: CPU (CPU frequency)
  LTO (1.6.11+ only): Enabled
  millis()/micros(): Enabled
  Port: (this is wherever your programmer is plugged into)
  Programmer: Arduino as ISP (AttinyCore)

  Create output code for bitmaps:  https://javl.github.io/image2cpp/
  Background color: black
  Invert image colors: yes
  Canvas size: 128x32
  Code output format: Arduino
  Draw mode: Vertical - 1 bit per pixel
  
 */


////////////////////////////////////////////////////////////////
//////////  ATTINY 85 PINOUT
////////////////////////////////////////////////////////////////

 
/*
  
  GND - BATTERY NEGATIVE TERMINAL
  VCC - BATTERY POSITIVE TERMINAL
  PBO - I2C BUS - SDA (USED FOR OLED)
  PB1 - YELLOW LED
  PB2 - I2C BUS - SCL (USED FOR OLED)
  PB3 - PIEZO BUZZER
  PB4 - MICROPHONE INPUT (ALSO BUTTON INPUT FOR V1.3 PCB)
  PB5 - RESET LINE
  
 */


//LIBRARIES FOR OLED
#include "TinyWireM.h" // USED FOR I2C CAPABILITIES
#include "TinyOzOLED.h" // USED FOR THE SSD1306 OLED SCREEN


#define MIC_PIN A2 // THIS IS PB4, BUT MUST LABEL IT A2 IN ORDER FOR THE ANALOG FUNCTIONS TO WORK
#define LED_PIN 1
#define PIEZO_PIN 3

int sensorValue = 0;        // value read from the pot

bool blowSense = false;
bool ending = false;


//NOTE FOR MELODIES
#define NOTE_B0  31
#define NOTE_C1  33
#define NOTE_CS1 35
#define NOTE_D1  37
#define NOTE_DS1 39
#define NOTE_E1  41
#define NOTE_F1  44
#define NOTE_FS1 46
#define NOTE_G1  49
#define NOTE_GS1 52
#define NOTE_A1  55
#define NOTE_AS1 58
#define NOTE_B1  62
#define NOTE_C2  65
#define NOTE_CS2 69
#define NOTE_D2  73
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 93
#define NOTE_G2  98
#define NOTE_GS2 104
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  123
#define NOTE_C3  131
#define NOTE_CS3 139
#define NOTE_D3  147
#define NOTE_DS3 156
#define NOTE_E3  165
#define NOTE_F3  175
#define NOTE_FS3 185
#define NOTE_G3  196
#define NOTE_GS3 208
#define NOTE_A3  220
#define NOTE_AS3 233
#define NOTE_B3  247
#define NOTE_C4  262
#define NOTE_CS4 277
#define NOTE_D4  294
#define NOTE_DS4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_GS4 415
#define NOTE_A4  440
#define NOTE_AS4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976
#define NOTE_C7  2093
#define NOTE_CS7 2217
#define NOTE_D7  2349
#define NOTE_DS7 2489
#define NOTE_E7  2637
#define NOTE_F7  2794
#define NOTE_FS7 2960
#define NOTE_G7  3136
#define NOTE_GS7 3322
#define NOTE_A7  3520
#define NOTE_AS7 3729
#define NOTE_B7  3951
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978

// notes in the melody:
int melody[] = {
  NOTE_C4, NOTE_C4, NOTE_D4, NOTE_C4, NOTE_F4, NOTE_E4,
  NOTE_C4, NOTE_C4, NOTE_D4, NOTE_C4, NOTE_G4, NOTE_F4,
  NOTE_C4, NOTE_C4, NOTE_C5, NOTE_A4, NOTE_F4, NOTE_F4, NOTE_E4, NOTE_D4,
  NOTE_AS4, NOTE_AS4, NOTE_A4, NOTE_F4, NOTE_G4, NOTE_F4
};

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
  4, 4, 2, 2, 2, 1, /*line 1*/
  4, 4, 2, 2, 2, 1, /*line 2*/
  4, 4, 2, 2, 4, 4, 2, 1, /*line 3*/
  4, 4, 2, 2, 2, 1
};

// notes in the melody:
int arduinoMelody[] = {
  NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, 0, NOTE_B3, NOTE_C4
};

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int arduinoNoteDurations[] = {
  4, 8, 8, 4, 4, 4, 4, 4
};


// 'hbd danner', 128x32px
const unsigned char epd_bitmap_hbd [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0xf8, 0xf8, 0x00, 0x00, 
  0x00, 0xe0, 0xf8, 0x38, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x08, 0x08, 0x98, 0xf8, 0xf0, 
  0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08, 0xf8, 0xf0, 0x00, 0x18, 0x78, 0xf0, 0xc0, 0xc0, 0xf0, 0x38, 
  0x08, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x88, 0x88, 0x88, 0xf8, 0xf0, 0x00, 0x00, 0xf8, 0xf8, 
  0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08, 0x08, 0xf8, 0xf0, 0x00, 0x08, 0x08, 0x08, 0xf8, 0xf8, 0x08, 
  0x08, 0x08, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0x80, 0xf8, 0xf8, 0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08, 
  0x18, 0xf0, 0xe0, 0x00, 0x00, 0xc0, 0xf8, 0x78, 0x78, 0xf0, 0x80, 0x08, 0x18, 0x78, 0xe0, 0xc0, 
  0xe0, 0x78, 0x38, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x18, 
  0x1f, 0x07, 0x04, 0x04, 0x05, 0x0f, 0x1f, 0x18, 0x00, 0x1f, 0x1f, 0x01, 0x01, 0x01, 0x01, 0x00, 
  0x00, 0x1f, 0x1f, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10, 0x19, 0x1f, 0x07, 0x00, 0x1f, 0x1f, 
  0x00, 0x1f, 0x1f, 0x01, 0x01, 0x03, 0x0f, 0x1f, 0x18, 0x10, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 
  0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10, 
  0x18, 0x0f, 0x07, 0x10, 0x1e, 0x1f, 0x07, 0x04, 0x04, 0x07, 0x1f, 0x1c, 0x00, 0x00, 0x1f, 0x1f, 
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'wish', 128x32px
const unsigned char epd_bitmap_wish [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x7c, 
  0xe0, 0xf0, 0x3c, 0xfc, 0xfc, 0x00, 0xc0, 0xf8, 0x5c, 0x5c, 0xfc, 0xe0, 0x00, 0x00, 0xfc, 0x70, 
  0x38, 0xfc, 0xcc, 0x04, 0x00, 0xfc, 0xfc, 0x24, 0x24, 0x24, 0x04, 0x00, 0x00, 0x00, 0x80, 0xf0, 
  0x7c, 0x4c, 0x7c, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x0c, 0xfc, 0xe0, 0xf8, 0x1c, 0x7c, 0xe0, 0xf8, 
  0x3c, 0x00, 0xfc, 0xfc, 0x00, 0x80, 0xbc, 0x34, 0x64, 0xec, 0xc0, 0x00, 0xfc, 0xfc, 0x20, 0x20, 
  0x20, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0x30, 0xf0, 0xc0, 0x01, 0x01, 0xf0, 
  0xf1, 0xe1, 0x80, 0xf1, 0xf1, 0x00, 0x01, 0xf0, 0x10, 0x10, 0x10, 0xf1, 0xc1, 0x00, 0x01, 0x00, 
  0x00, 0xf0, 0xf1, 0x91, 0x90, 0xf1, 0x61, 0x01, 0x01, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x01, 0xe1, 
  0x30, 0x10, 0x10, 0x31, 0xe1, 0xc0, 0x10, 0xf0, 0x80, 0xc1, 0xf1, 0xf1, 0xc0, 0x80, 0xf1, 0x11, 
  0x00, 0x00, 0x01, 0xc1, 0xe0, 0x30, 0x11, 0x11, 0x31, 0xe1, 0x80, 0x00, 0xf1, 0xf1, 0x00, 0x00, 
  0xf0, 0xf1, 0x00, 0x10, 0x10, 0xf0, 0xf0, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x01, 0x01, 0x81, 0x87, 0x86, 0x80, 0x87, 
  0x87, 0x00, 0x83, 0x87, 0x07, 0x00, 0x80, 0x87, 0x04, 0x04, 0x84, 0x87, 0x81, 0x80, 0x80, 0x00, 
  0x00, 0x07, 0x07, 0x04, 0x04, 0x87, 0x83, 0x80, 0x80, 0x07, 0x04, 0x04, 0x04, 0x84, 0x80, 0x83, 
  0x06, 0x04, 0x84, 0x86, 0x83, 0x01, 0x00, 0x83, 0x87, 0x07, 0x80, 0x80, 0x87, 0x87, 0x81, 0x00, 
  0x00, 0x00, 0x80, 0x01, 0x03, 0x06, 0x04, 0x04, 0x86, 0x83, 0x80, 0x80, 0x83, 0x87, 0x04, 0x04, 
  0x07, 0x03, 0x80, 0x80, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x00, 
  0x00, 0x00, 0x3f, 0x3f, 0x04, 0x04, 0x3f, 0x3f, 0x00, 0x00, 0x3f, 0x24, 0x24, 0x24, 0x24, 0x00, 
  0x00, 0x00, 0x00, 0x0e, 0x1f, 0x31, 0x20, 0x20, 0x31, 0x11, 0x00, 0x38, 0x1f, 0x0b, 0x0b, 0x1f, 
  0x3c, 0x20, 0x3f, 0x3f, 0x07, 0x0e, 0x3c, 0x3f, 0x3f, 0x00, 0x3f, 0x3f, 0x20, 0x20, 0x31, 0x1f, 
  0x00, 0x00, 0x3f, 0x20, 0x20, 0x20, 0x20, 0x00, 0x3f, 0x3f, 0x24, 0x24, 0x24, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x2f, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'year', 128x32px
const unsigned char epd_bitmap_year [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x20, 
  0x20, 0x20, 0xfc, 0xfc, 0x00, 0xc0, 0xf8, 0x5c, 0x5c, 0xfc, 0xe0, 0x04, 0x3c, 0xf8, 0xc0, 0xf0, 
  0x3c, 0x0c, 0x00, 0xfc, 0xfc, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0x7c, 0x4c, 
  0x7c, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xf0, 
  0x80, 0xc0, 0xf0, 0xf0, 0xc0, 0x80, 0xf0, 0x10, 0xc0, 0xe0, 0x30, 0x10, 0x10, 0x30, 0xe1, 0x80, 
  0x00, 0xf0, 0xf1, 0xe1, 0x80, 0xf1, 0xf0, 0x00, 0xf0, 0xf0, 0x11, 0x11, 0x30, 0xe1, 0x81, 0x01, 
  0xf0, 0xf0, 0x90, 0x91, 0x91, 0x01, 0x01, 0xf1, 0xf1, 0x90, 0x90, 0xf0, 0x61, 0x01, 0xf0, 0xf0, 
  0x90, 0x91, 0x91, 0x10, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0xf0, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x07, 0x07, 0x00, 0x00, 0x07, 0x07, 0x01, 0x00, 0x01, 0x03, 0x06, 0x04, 0x04, 0x06, 0x03, 0x00, 
  0x80, 0x87, 0x07, 0x01, 0x83, 0x87, 0x07, 0x80, 0x87, 0x87, 0x84, 0x84, 0x86, 0x03, 0x00, 0x00, 
  0x87, 0x87, 0x84, 0x04, 0x04, 0x04, 0x80, 0x87, 0x87, 0x80, 0x81, 0x07, 0x06, 0x80, 0x87, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x04, 0x04, 0x07, 0x01, 0x00, 0x07, 0x07, 0x04, 0x04, 
  0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x3e, 0x3e, 0x03, 0x01, 0x00, 0x3f, 0x3f, 0x24, 0x24, 0x24, 0x24, 0x00, 0x38, 0x3e, 
  0x0f, 0x09, 0x0f, 0x3c, 0x30, 0x00, 0x3f, 0x3f, 0x04, 0x0c, 0x3f, 0x33, 0x00, 0x20, 0x2f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// 'friends', 128x32px
const unsigned char epd_bitmap_secret_mode [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0xf0, 0xf8, 0xc8, 0xc8, 0x98, 0x90, 0x00, 0x00, 0xf8, 0xf8, 0x88, 0x88, 
  0x88, 0x88, 0x08, 0x00, 0xe0, 0xf0, 0x18, 0x08, 0x08, 0x08, 0x18, 0x10, 0x00, 0xf8, 0xf8, 0x08, 
  0x08, 0x08, 0x98, 0xf8, 0xf0, 0x00, 0xf8, 0xf8, 0x88, 0x88, 0x88, 0x88, 0x88, 0x08, 0x08, 0x08, 
  0xf8, 0xf8, 0xf8, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0xf8, 0xf8, 0x80, 0x00, 0xf0, 
  0xf8, 0xf8, 0xf8, 0x80, 0xe0, 0xf0, 0x18, 0x08, 0x08, 0x18, 0x70, 0xf0, 0xc0, 0xf8, 0xf8, 0xf8, 
  0x08, 0x08, 0x18, 0xf8, 0xf0, 0x80, 0x00, 0xf8, 0xf8, 0x88, 0x88, 0x88, 0x88, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x08, 0x18, 0x19, 0x13, 0x13, 0x1f, 0x0f, 0x06, 0x00, 0x1f, 0x1f, 0x10, 0x10, 
  0x10, 0x10, 0x10, 0x00, 0x07, 0x0f, 0x18, 0x10, 0x10, 0x10, 0x18, 0x08, 0x00, 0x1f, 0x1f, 0x01, 
  0x01, 0x07, 0x0f, 0x1d, 0x18, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 
  0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x03, 0x1f, 0x1f, 0x07, 
  0x00, 0x1f, 0x1f, 0x01, 0x07, 0x0f, 0x18, 0x10, 0x10, 0x18, 0x0e, 0x0f, 0x03, 0x1f, 0x1f, 0x1f, 
  0x10, 0x10, 0x10, 0x1f, 0x0f, 0x01, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0x00, 0xfc, 0xfc, 0x38, 
  0xe0, 0xc0, 0xfc, 0xfc, 0xfc, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 0x1c, 
  0x04, 0x04, 0x04, 0x0c, 0xf8, 0xf0, 0x00, 0xf0, 0xf8, 0x0c, 0x04, 0x04, 0x04, 0x0c, 0x08, 0x00, 
  0xfc, 0xfc, 0xc0, 0xe0, 0xf8, 0xdc, 0x0c, 0x04, 0x00, 0xfc, 0xfc, 0x44, 0x44, 0x44, 0x44, 0x44, 
  0x00, 0xfc, 0xfc, 0xfc, 0x04, 0x04, 0x0c, 0xfc, 0xf8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xfc, 
  0x0c, 0x00, 0x7c, 0xfc, 0x0c, 0x00, 0x00, 0xfc, 0x7c, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x0f, 0x0c, 0x08, 0x08, 0x0f, 0x07, 0x00, 0x00, 0x0f, 0x0f, 0x00, 
  0x00, 0x07, 0x0f, 0x0f, 0x0f, 0x00, 0x0f, 0x0f, 0x08, 0x08, 0x08, 0x08, 0x08, 0x03, 0x07, 0x0e, 
  0x08, 0x08, 0x08, 0x0c, 0x07, 0x03, 0x00, 0x03, 0x07, 0x0c, 0x08, 0x08, 0x08, 0x0c, 0x04, 0x00, 
  0x0f, 0x0f, 0x00, 0x00, 0x01, 0x07, 0x0f, 0x0c, 0x00, 0x0f, 0x0f, 0x08, 0x08, 0x08, 0x08, 0x08, 
  0x00, 0x0f, 0x0f, 0x0f, 0x08, 0x08, 0x08, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0d, 
  0x0c, 0x00, 0x0c, 0x0d, 0x0c, 0x00, 0x00, 0x0d, 0x0c, 0x00, 0x00, 0x0d, 0x0d, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'custom', 128x32px
const unsigned char customBitmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0x80, 
  0xf8, 0xf8, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0x38, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x08, 
  0x08, 0x98, 0xf8, 0xf0, 0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08, 0xf8, 0xf0, 0x08, 0x18, 0x78, 0xe0, 
  0xc0, 0xe0, 0x78, 0x38, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x88, 0x88, 0x88, 0xf8, 0xf0, 
  0x00, 0x00, 0xf8, 0xf8, 0x00, 0xf8, 0xf8, 0x08, 0x08, 0x08, 0x08, 0xf8, 0xf0, 0x00, 0x08, 0x08, 
  0xf8, 0xf8, 0xf8, 0x08, 0x08, 0x00, 0xf8, 0xf8, 0x80, 0x80, 0x80, 0xf8, 0xf8, 0xf8, 0x00, 0xf8, 
  0xf8, 0x08, 0x08, 0x08, 0x38, 0xf0, 0xc0, 0x00, 0x00, 0xc0, 0xf8, 0x78, 0x78, 0xf0, 0x80, 0x08, 
  0x38, 0xf8, 0xe0, 0xc0, 0xe0, 0x78, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 
  0x1f, 0x1f, 0x00, 0x18, 0x1f, 0x07, 0x04, 0x04, 0x05, 0x0f, 0x1f, 0x18, 0x00, 0x1f, 0x1f, 0x01, 
  0x01, 0x01, 0x01, 0x00, 0x00, 0x1f, 0x1f, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1f, 
  0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x10, 0x10, 0x10, 0x19, 0x1f, 
  0x07, 0x00, 0x1f, 0x1f, 0x00, 0x1f, 0x1f, 0x01, 0x01, 0x03, 0x0f, 0x1f, 0x18, 0x10, 0x00, 0x00, 
  0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x00, 0x1f, 
  0x1f, 0x10, 0x10, 0x10, 0x1c, 0x0f, 0x03, 0x10, 0x1e, 0x1f, 0x07, 0x04, 0x04, 0x07, 0x1f, 0x1c, 
  0x00, 0x00, 0x1f, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x84, 0x84, 0x84, 0x84, 0x04, 0x00, 0xfc, 0xfc, 
  0x84, 0x84, 0x84, 0xcc, 0x7c, 0x30, 0x00, 0xfc, 0xfc, 0x00, 0xfc, 0xfc, 0x44, 0x44, 0x44, 0x44, 
  0x44, 0x04, 0xfc, 0xfc, 0xfc, 0x78, 0xe0, 0x80, 0xfc, 0xfc, 0x00, 0xfc, 0xfc, 0xfc, 0x04, 0x04, 
  0x0c, 0xfc, 0xf8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xfc, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 
  0x00, 0x01, 0x03, 0x07, 0x0e, 0x0c, 0x00, 0x0f, 0x0f, 0x00, 0x0f, 0x0f, 0x08, 0x08, 0x08, 0x08, 
  0x08, 0x08, 0x0f, 0x0f, 0x0f, 0x00, 0x01, 0x07, 0x0f, 0x0f, 0x00, 0x0f, 0x0f, 0x0f, 0x08, 0x08, 
  0x08, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0d, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// 'makeithackin', 128x32px
const unsigned char MakeItHackinBitmap [] PROGMEM = { //MakeItHackin
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 
  0x18, 0x18, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x3e, 0x36, 0x22, 0x00, 0x00, 0x00, 0x00, 0x1c, 
  0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 
  0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 
  0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
  0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7f, 0x0f, 0x3e, 0x78, 0x70, 0x7c, 0x1e, 0x07, 0x7f, 0x7f, 0x00, 
  0x60, 0x78, 0x7c, 0x1f, 0x1f, 0x1b, 0x1f, 0x3e, 0x78, 0x60, 0x00, 0x7f, 0x7f, 0x0c, 0x1e, 0x3e, 
  0x73, 0x63, 0x41, 0x00, 0x00, 0x7f, 0x7f, 0x6d, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x7f, 0x7f, 0x7f, 0x01, 0x03, 0x03, 0x7f, 0x7f, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0xff, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xf0, 0xfd, 
  0x70, 0x20, 0x00, 0xff, 0xff, 0xff, 0x18, 0x18, 0x18, 0x18, 0xff, 0xff, 0xff, 0x00, 0xc0, 0xf0, 
  0x7c, 0x7f, 0x7f, 0x77, 0x7f, 0x7e, 0xf8, 0xe0, 0x80, 0x7e, 0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 
  0xc7, 0xe7, 0xe6, 0x00, 0xff, 0xff, 0x1c, 0x1c, 0x3c, 0x7e, 0xe7, 0xc3, 0x81, 0x01, 0x00, 0xff, 
  0xff, 0x00, 0xff, 0xff, 0xff, 0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1c, 0x3e, 0x23, 
  0x37, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {

  pinMode(LED_PIN, OUTPUT);
  pinMode(MIC_PIN, INPUT);
  digitalWrite(LED_PIN, HIGH);
  
    //Start Screen.  Some of these settings are to get the screen in the right orientation.
  OzOled.init();                 
  // OzOled.clearDisplay(); 
  OzOled.setNormalDisplay();  
  OzOled.sendCommand(0xA1);
  OzOled.sendCommand(0xC8);
  OzOled.setHorizontalMode(); 
  OzOled.setBrightness(255);    

  // OzOled.drawBitmap(MakeItHackinBitmap, 0, 0, 16, 8);
  // OzOled.drawBitmap(customBitmap, 0, 0, 16, 8);
  // delay(500);
  //OzOled.clearDisplay(); 

  // WHEN TURNING ON THE CARD, A 'SECRET MODE' CAN BE ENTERED FIRST.  USER CAN EITHER BLOW INTO THE MICROPHONE WHILE THE CARD IS BOOTING UP, OR PRESS THE BUTTON ON V1.3+ PCB
  if (analogRead(MIC_PIN) < 200){
    // INSTEAD OF WRITING TEXT, YOU CAN ALSO DISPLAY A BITMAP ON THE SCREEN
    OzOled.drawBitmap(epd_bitmap_secret_mode, 0, 0, 16, 8);
      /*
     // INSTEAD OF DRAWING A BITMAP, YOU CAN ALSO DISPLAY TEXT ON THE SCREEN
      OzOled.setCursorXY(0,0);   
      OzOled.printString("      SECRET ");  
      OzOled.setCursorXY(0,1);   
      OzOled.printString("     MODE");
      OzOled.setCursorXY(0,2);  
      OzOled.printString("    UNLOCKED !!! "); 
    */
    for (int thisNote = 0; thisNote < 8; thisNote++) {
      // to calculate the note duration, take one second divided by the note type.
      //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
      int noteDuration = 1000 / arduinoNoteDurations[thisNote];
      tone(PIEZO_PIN, arduinoMelody[thisNote], noteDuration);
      // to distinguish the notes, set a minimum time between them.
      // the note's duration + 30% seems to work well:
      int pauseBetweenNotes = noteDuration * 1.30;
      delay(pauseBetweenNotes);
      // stop the tone playing:
      noTone(PIEZO_PIN);
    }
  }


   // INSTEAD OF WRITING TEXT, YOU CAN ALSO DISPLAY A BITMAP ON THE SCREEN
   OzOled.drawBitmap(epd_bitmap_hbd, 0, 0, 16, 8); // "HAPPY BIRTHDAY"
   //OzOled.drawBitmap(customBitmap, 0, 0, 16, 8); // CUSTOM.  (EXAMPLE, "HAPPY BIRTHDAY FRIEND")
 
  /*
   // INSTEAD OF DRAWING A BITMAP, YOU CAN ALSO DISPLAY TEXT ON THE SCREEN
    OzOled.setCursorXY(0,0);   
    OzOled.printString("      HAPPY ");  
    OzOled.setCursorXY(0,1);   
    OzOled.printString("     BIRTHDAY");
    OzOled.setCursorXY(0,2);  
    OzOled.printString("    FRIEND !!! "); 
  */
  
  //PLAY THE HAPPY BIRTHDAY SONG
  for (int thisNote = 0; thisNote < 27 ; thisNote++) {
    // to calculate the note duration, take one second
    // divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000/noteDurations[thisNote];
    tone(PIEZO_PIN, melody[thisNote],noteDuration);
    
    // to distinguish the notes, set a minimum time between them.
    // the note’s duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(PIEZO_PIN);
  }

    // INSTEAD OF WRITING TEXT, YOU CAN ALSO DISPLAY A BITMAP ON THE SCREEN
    OzOled.drawBitmap(epd_bitmap_wish, 0, 0, 16, 8);  
    
    /*
    // INSTEAD OF DRAWING A BITMAP, YOU CAN ALSO DISPLAY TEXT ON THE SCREEN
    OzOled.clearDisplay(); 
    OzOled.setCursorXY(0,0);   
    OzOled.printString("   MAKE A WISH");  
    OzOled.setCursorXY(0,1);   
    OzOled.printString("   AND BLOW OUT");
    OzOled.setCursorXY(0,2);  
    OzOled.printString("  THE CANDLE!!!! ");  
    */
  
}

void loop() {
  // read the analog in value:
  if (blowSense == false){
    analogWrite(LED_PIN, random(0,255));
    sensorValue = analogRead(MIC_PIN);
    if (sensorValue < 200){
      digitalWrite(LED_PIN, LOW);
      blowSense = true;
      
      // INSTEAD OF WRITING TEXT, YOU CAN ALSO DISPLAY A BITMAP ON THE SCREEN
      OzOled.drawBitmap(epd_bitmap_year, 0, 0, 16, 8);
      /*
      // INSTEAD OF DRAWING A BITMAP, YOU CAN ALSO DISPLAY TEXT ON THE SCREEN
      OzOled.clearDisplay(); 
      OzOled.setCursorXY(0,0);   
      OzOled.printString("     HAVE A   ");  
      OzOled.setCursorXY(0,1);   
      OzOled.printString("    WONDERFUL ");
      OzOled.setCursorXY(0,2);  
      OzOled.printString("     YEAR!!!  "); 
      */
      }
  }
  delay(2);
}
